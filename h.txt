import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:register/Login.dart';

import 'Register.dart';

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  final FirebaseFirestore _firestore =FirebaseFirestore.instance;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Home Detais "),
        centerTitle: true,
        actions: [
          IconButton(onPressed: () {
            Navigator.push(context,
              MaterialPageRoute(builder: (context) => Login()),
            );
          },
              icon: Icon(
                Icons.login, color: Color(0xFF00FF3A), size: 30, weight: 20,)),
          IconButton(onPressed: () {
            Navigator.push(context,
              MaterialPageRoute(builder: (context) => Register()),
            );
          },
              icon: Icon(Icons.account_circle_rounded, color: Color(0xFF00FF3A),
                size: 30,
                weight: 20,)),

        ],),

      body: StreamBuilder(
          stream: _firestore.collection('Register').snapshots(),
          builder:(context,snapshots){
            if(snapshots.hasError){
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(content: Text("Error ${snapshots.error} ")),
              );
            }
            if (snapshots.connectionState == ConnectionState.waiting) {
              return Center(child: CircularProgressIndicator());
            }

            if (!snapshots.hasData || snapshots.data!.docs.isEmpty) {
              return Center(child: Text("No Data Found"));
            }

            var document = snapshots.data!.docs ?? [];

            return ListView.builder(
              itemCount: document.length,
              itemBuilder: (context, index){
                var data = document[index];
                return Card(
                  margin: const EdgeInsets.only(top: 20),
                  child: ListTile(
                    title: Text("Name : ${data['Name']}"),
                    subtitle: Text("Email : ${data['Email']} \nPassword : ${data['Password']}"),
                    trailing: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Icon(Icons.edit),
                        SizedBox(
                          width : 20,
                        ),
                        Icon(Icons.delete),

                      ],
                    ),
                  ),
                  
                );
              }

            );

          }
      ),


    );
  }
}